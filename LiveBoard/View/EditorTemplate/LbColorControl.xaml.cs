using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Linq;
using Windows.Foundation;
using Windows.Foundation.Collections;
using Windows.UI;
using Windows.UI.Xaml;
using Windows.UI.Xaml.Controls;
using Windows.UI.Xaml.Controls.Primitives;
using Windows.UI.Xaml.Data;
using Windows.UI.Xaml.Input;
using Windows.UI.Xaml.Media;
using Windows.UI.Xaml.Navigation;

// The User Control item template is documented at http://go.microsoft.com/fwlink/?LinkId=234236
using PerpetuumSoft.Controls;

namespace LiveBoard.View.EditorTemplate
{
	public sealed partial class LbColorControl : UserControl
	{
		public LbColorControl()
		{
			// ColorPicker 콘트롤 라이센스 적용.
			PerpetuumSoft.WinRT.Framework.Licensing.LicenseManager.SetKey(@"{CIAADGAADDAAC2AADJAAC1AADIAABZAACIAAC3AADGAADEAAC3AADIAADJAADJAA
DBAAA6AACNAACBAAA6AAB5AADDAADCAADIAADGAADDAADAAADHAAA6AAC4AADDAA
DGAAA6AACPAAC7AADCAAC2AADDAADLAADHAAA6AABUAAANAAAKAACGAACZAADBAA
C3AABZAADNAADDAADJAADCAAC5AAC8AACZAAC3AAB2AAC0AACZAADEAADJAADAAA
BKAADCAAC3AADIAAANAAAKAAB7AADMAADEAAC7AADGAACZAADIAAC7AADDAADCAA
B6AACZAADIAAC3AABZAABMAABQAABLAABNAABTAABLAABOAABMAABNAABQAAA6AA
BMAABMAABWAABMAABMAABWAABMAABMAAANAAAKAACEAAC7AAC1AAC3AADCAADHAA
C3AACMAADNAADEAAC3AABZAACKAAC3AAC5AAC7AADHAADIAAC3AADGAAC3AAC2AA
ANAAAKAACEAAC7AAC1AAC3AADCAADHAAC3AADHAACBAADCAAB9AADGAADDAADJAA
DEAABZAABNAAANAAAKAACPAAC7AADCAABUAACNAACBAAB5AADDAADCAADIAADGAA
DDAADAAADHAABZAABNAAANAAAKAACPAAC7AADCAABUAACEAAC7AAC1AAC3AADCAA
DHAAC7AADCAAC5AABZAABNAAANAAAKAACKAADJAADCAACMAAC7AADBAAC3AACLAA
C7AAC5AADCAACZAADIAADJAADGAAC3AABZAAB4AACOAAB3AAB7AAB7AABPAAB5AA
CGAAB7AABNAAB9AABSAAB5AABSAAB8AACHAAB4AABRAAB6AABSAAB8AAB5AAB4AA
CKAAB8AABNAAB8AACAAAB7AACKAAB9AACFAAB9AACCAAB3AABVAAB9AACFAAB7AA
B6AAB5AACLAAB5AACOAAB9AABQAAB5AABVAAB8AACDAAB5AACAAAB3AACJAAB9AA
BOAAB4AACNAAB3AACMAAB5AABUAAB4AACNAAB5AABOAAB6AABPAAB5AAB6AAB3AA
CHAAB5AAB8AAB7AABQAAB8AAB4AAB5AACMAAB8AACHAAB4AACRAAB7AABPAAB8AA
B7AAB5AACDAAB9AACSAAB8AAB8AAB3AACNAAB4AABSAAB6AAB9AAB3AAB3AAB3AA
B7AAB8AACPAAB5AAB8AAB7AAB7AAB3AACEAAB6AABUAAB4AACHAAB3AACSAAB4AA
BMAAB7AACOAAB7AACRAAB8AAB3AAB4AACQAAB6AACSAAB9AABQAAB3AACJAAB9AA
BUAAB6AAB4AAB9AABQAAB5AACMAAB7AAB4AAB8AABQAAB5AABMAAB8AABUAAB4AA
CNAAB8AACJAAB9AACFAAB7AAB5AAB5AABPAAB6AAB6AAB5AACCAAB5AABTAAB4AA
B6AAB4AACHAAB6AACMAAB8AACAAAB8AACCAAB4AABTAAB6AAB8AAB4AACBAAB5AA
BNAAB5AABRAAB7AABVAAB6AACSAAB9AACGAAB9AACEAAB5AACFAAB6AAB3AAB3AA
CSAAB5AAB4AAB9AAB6AAB4AACFAAB4AACMAAB9AABUAAB4AAB8AAB5AAB9AAB5AA
CLAAB7AACGAAB8AACMAAB9AAB4AAB7AACNAAB4AACGAAB9AAB5AAB8AABTAAB4AA
CAAAB8AACLAAB4AABQAAB7AABQAAB9AAB4AAB9AAB5AAB7AACKAAB7AABQAAB4AA
BNAAB3AAB3AAB6AACKAAB6AACOAAB6AAB3AAANAAAKAAB6AAC3AADHAAC7AAC5AA
DCAACMAAC7AADBAAC3AACLAAC7AAC5AADCAACZAADIAADJAADGAAC3AABZAAB3AA
CCAAB8AABTAAB9AACRAAB5AABRAAB4AAB6AAB6AACKAAB7AABVAAB4AACFAAB9AA
CNAAB4AACRAACAAAB4AAB4AABQAAB9AACRAAB5AABPAACAAAB3AAB5AAB5AAB4AA
COAAB3AAB9AAB5AACLAAB6AAB8AAB8AABNAAB9AACDAAB9AACQAAB6AAB8AAB8AA
B4AAB5AACFAAB6AAB3AAB5AABQAAB5AABVAAB3AAB8AAB4AACMAAB5AABPAAB9AA
CIAAB9AABSAAB4AABSAAB7AABVAAB5AACDAAB7AACLAAB6AACQAAB8AACGAAB6AA
CPAAB4AAB7AAB5AABRAAB8AAB3AAB4AACQAAB4AAB6AAB5AACQAACAAAB3AAB6AA
CKAAB6AACSAAB9AAB9AAB5AAB4AAB7AACBAAB3AABSAAB8AABQAAB5AACNAAB5AA
B4AAB8AACQAAB7AACSAAB6AAB6AAB3AABVAAB8AACRAAB9AACGAAB3AACMAAB7AA
BPAAB4AACRAAB6AACFAAB7AABUAAB7AABRAAB8AACPAAB5AAB5AAB4AACGAAB9AA
BRAAB9AACCAAB4AACCAAB6AACLAAB5AACHAAB6AABOAAB8AAB5AAB7AABMAAB6AA
CLAAB4AACRAAB5AACMAAB7AACIAAB9AACHAAB9AACRAAB9AABTAAB7AABTAAB7AA
B9AAB7AACBAAB6AABTAAB3AACFAAB3AABPAAB9AACBAAB3AABUAAB4AACKAAB3AA
CDAAB4AAB9AAB7AACFAAB8AABUAAB5AAB4AAB7AAB6AAB8AACDAAB9AACBAAB4AA
BSAAB5AABSAAB7AACLAAB5AACRAAB4AAB4AAB5AACLAAB3AABMAAB6AABQAAB9AA
B4AAB5AACNAAB8AACOAAB7AABRAAB9AACAAACAAAB5AAB3AAB5AAB4AACDAAB8AA
CRAAB9AAB5AAB3AACNAAB6AACEAAB4AACFAAB8AABMAAB4AAB3AAB7AACPAAANAA
AKAA}");

			this.InitializeComponent();
		}

		private void ColorPicker_OnColorChanged(object sender, PropertyChangedEventArgs<Color> e)
		{
			if (ColorPickerControl == null)
				return;
			
			if(TextBoxControl.FocusState == FocusState.Keyboard ||
				TextBoxControl.FocusState == FocusState.Pointer)
				return;

			var c = ColorPickerControl.Color;
			TextBoxControl.Text = String.Format("#FF{0:X2}{1:X2}{2:X2}", c.R, c.G, c.B);
		}

		private void TextBoxControl_OnTextChanged(object sender, TextChangedEventArgs e)
		{
			ColorPickerControl.Color = convertToColor(TextBoxControl.Text);
		}

		private static Color convertToColor(string colorCode)
		{
			int argb = Int32.Parse(colorCode.Replace("#", ""), NumberStyles.HexNumber);
			return Color.FromArgb((byte)((argb & -16777216) >> 0x18),
								  (byte)((argb & 0xff0000) >> 0x10),
								  (byte)((argb & 0xff00) >> 8),
								  (byte)(argb & 0xff));
		}
	}
}
