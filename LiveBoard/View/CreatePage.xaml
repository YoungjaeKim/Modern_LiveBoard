<common:LayoutAwarePage
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:LiveBoard"
    xmlns:common="using:LiveBoard.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:editorTemplate="using:LiveBoard.View.EditorTemplate"
    xmlns:Input="using:Telerik.UI.Xaml.Controls.Input"
    x:Name="pageRoot"
    x:Class="LiveBoard.View.CreatePage"
    NavigationCacheMode="Required"
    mc:Ignorable="d">

	<common:LayoutAwarePage.Resources>
		<DataTemplate x:Key="DefaultTemplate" />
		<DataTemplate x:Key="StringTemplate">
			<editorTemplate:LbStringControl />
		</DataTemplate>
		<DataTemplate x:Key="IntTemplate">
			<editorTemplate:LbIntegerControl />
		</DataTemplate>
		<DataTemplate x:Key="DoubleTemplate">
			<editorTemplate:LbDoubleControl />
		</DataTemplate>
		<common:LbEditorDataTemplateSelector x:Key="EditorTemplateSelector"
                                    DefaultTemplate="{StaticResource DefaultTemplate}"
                                    StringTemplate="{StaticResource StringTemplate}"
									DoubleTemplate="{StaticResource DoubleTemplate}"
                                    IntTemplate="{StaticResource IntTemplate}" />
		<common:LbPageToDataListConverter x:Key="PageToDataListConverter" />
		<common:BooleanToVisibilityConverter x:Key="BoolToVisibility" />
		<common:PropertyDataSummaryConverter x:Key="PropertyDataSummary" />

		<Style x:Key="ListViewItemStyle1" TargetType="ListViewItem">
			<Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
			<Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="TabNavigation" Value="Local"/>
			<Setter Property="IsHoldingEnabled" Value="True"/>
			<Setter Property="Margin" Value="0,0,18,2"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Top"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ListViewItem">
						<Border x:Name="OuterContainer">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="PointerOver">
										<Storyboard>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PointerOverBorder"/>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectionBackground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBackgroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="SelectedBorder">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBorderThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
											<!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedEarmark">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBackgroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>-->
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<PointerDownThemeAnimation TargetName="ContentContainer"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="PointerOverPressed">
										<Storyboard>
											<PointerDownThemeAnimation TargetName="ContentContainer"/>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PointerOverBorder"/>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectionBackground">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBackgroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="SelectedBorder">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBorderThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
											<!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedEarmark">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedPointerOverBackgroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>-->
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<DoubleAnimation Duration="0" To="{StaticResource ListViewItemDisabledThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused">
										<Storyboard>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Unfocused"/>
									<VisualState x:Name="PointerFocused"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="SelectionHintStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.65" To="NoSelectionHint"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="VerticalSelectionHint">
										<Storyboard>
											<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectionBackground" ToVerticalOffset="15"/>
											<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="ContentBorder" ToVerticalOffset="15"/>
											<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectedBorder" ToVerticalOffset="15"/>
											<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectedCheckMark" ToVerticalOffset="15"/>
											<DoubleAnimationUsingKeyFrames Duration="0:0:0.500" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyph">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
												<DiscreteDoubleKeyFrame KeyTime="0:0:0.500" Value="0"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="HorizontalSelectionHint">
										<Storyboard>
											<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectionBackground" ToVerticalOffset="0"/>
											<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="ContentBorder" ToVerticalOffset="0"/>
											<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectedBorder" ToVerticalOffset="0"/>
											<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectedCheckMark" ToVerticalOffset="0"/>
											<DoubleAnimationUsingKeyFrames Duration="0:0:0.500" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyph">
												<DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
												<DiscreteDoubleKeyFrame KeyTime="0:0:0.500" Value="0"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="NoSelectionHint"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselecting">
										<Storyboard>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Unselected">
										<Storyboard>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="UnselectedPointerOver">
										<Storyboard>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="UnselectedSwiping">
										<Storyboard>
											<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectingGlyph"/>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Selecting">
										<Storyboard>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectingGlyph"/>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Selected">
										<Storyboard>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="SelectedSwiping">
										<Storyboard>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="SelectedUnfocused">
										<Storyboard>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="DragStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.2" To="NotDragging"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="NotDragging"/>
									<VisualState x:Name="Dragging">
										<Storyboard>
											<DoubleAnimation Duration="0" To="{StaticResource ListViewItemDragThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="InnerDragContent"/>
											<DragItemThemeAnimation TargetName="InnerDragContent"/>
											<FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter"/>
											<FadeOutThemeAnimation TargetName="SelectedBorder"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="DraggingTarget">
										<Storyboard>
											<DropTargetItemThemeAnimation TargetName="OuterContainer"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="MultipleDraggingPrimary">
										<Storyboard>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MultiArrangeOverlayBackground"/>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MultiArrangeOverlayText"/>
											<DoubleAnimation Duration="0" To="{StaticResource ListViewItemDragThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentBorder"/>
											<FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground"/>
											<FadeInThemeAnimation TargetName="MultiArrangeOverlayText"/>
											<DragItemThemeAnimation TargetName="ContentBorder"/>
											<FadeOutThemeAnimation TargetName="SelectionBackground"/>
											<FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter"/>
											<FadeOutThemeAnimation TargetName="SelectedBorder"/>
											<FadeOutThemeAnimation TargetName="PointerOverBorder"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="MultipleDraggingSecondary">
										<Storyboard>
											<FadeOutThemeAnimation TargetName="ContentContainer"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="ReorderHintStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="NoReorderHint"/>
									<VisualState x:Name="BottomReorderHint">
										<Storyboard>
											<DragOverThemeAnimation Direction="Bottom" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="TopReorderHint">
										<Storyboard>
											<DragOverThemeAnimation Direction="Top" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="RightReorderHint">
										<Storyboard>
											<DragOverThemeAnimation Direction="Right" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="LeftReorderHint">
										<Storyboard>
											<DragOverThemeAnimation Direction="Left" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="DataVirtualizationStates">
									<VisualState x:Name="DataAvailable"/>
									<VisualState x:Name="DataPlaceholder">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderTextBlock">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Visible</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderRect">
												<DiscreteObjectKeyFrame KeyTime="0">
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Visible</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Grid x:Name="ReorderHintContent" Background="Transparent">
								<Path x:Name="SelectingGlyph" Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemCheckSelectingThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="13" Margin="0,9.5,9.5,0" Opacity="0" Stretch="Fill" VerticalAlignment="Top" Width="15"/>
								<Border x:Name="HintGlyphBorder" HorizontalAlignment="Right" Height="40" Margin="4" Opacity="0" VerticalAlignment="Top" Width="40">
									<Path x:Name="HintGlyph" Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemCheckHintThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="13" Margin="0,5.5,5.5,0" Opacity="0" Stretch="Fill" VerticalAlignment="Top" Width="15"/>
								</Border>
								<Border x:Name="ContentContainer">
									<Grid x:Name="InnerDragContent">
										<Rectangle x:Name="PointerOverBorder" Fill="{StaticResource ListViewItemPointerOverBackgroundThemeBrush}" IsHitTestVisible="False" Margin="1" Opacity="0"/>
										<Rectangle x:Name="FocusVisual" IsHitTestVisible="False" Opacity="0" Stroke="{StaticResource ListViewItemFocusBorderThemeBrush}" StrokeThickness="2"/>
										<Rectangle x:Name="SelectionBackground" Fill="{StaticResource ListViewItemSelectedBackgroundThemeBrush}" Margin="4" Opacity="0"/>
										<Border x:Name="ContentBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="4">
											<Grid>
												<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
												<TextBlock x:Name="PlaceholderTextBlock" Foreground="{x:Null}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Opacity="0" Text="Xg"/>
												<Rectangle x:Name="PlaceholderRect" Fill="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" IsHitTestVisible="False" Visibility="Collapsed"/>
												<Rectangle x:Name="MultiArrangeOverlayBackground" Fill="{StaticResource ListViewItemDragBackgroundThemeBrush}" IsHitTestVisible="False" Opacity="0"/>
											</Grid>
										</Border>
										<Rectangle x:Name="SelectedBorder" IsHitTestVisible="False" Margin="1" Opacity="0" Stroke="{StaticResource ListViewItemSelectedBackgroundThemeBrush}" StrokeThickness="{StaticResource ListViewItemSelectedBorderThemeThickness}"/>
										<Border x:Name="SelectedCheckMarkOuter" HorizontalAlignment="Right" IsHitTestVisible="False" Margin="1" VerticalAlignment="Top">
											<Grid x:Name="SelectedCheckMark" Height="40" Opacity="0" Width="40">
												<!--<Path x:Name="SelectedEarmark" Data="M0,0 L40,0 L40,40 z" Fill="{StaticResource ListViewItemSelectedBackgroundThemeBrush}" Stretch="Fill"/>-->
												<!--<Path Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemCheckThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="13" Margin="0,5.5,5.5,0" Stretch="Fill" VerticalAlignment="Top" Width="15"/>-->
											</Grid>
										</Border>
										<TextBlock x:Name="MultiArrangeOverlayText" Foreground="{StaticResource ListViewItemDragForegroundThemeBrush}" FontSize="26.667" FontFamily="{StaticResource ContentControlThemeFontFamily}" IsHitTestVisible="False" Margin="18,9,0,0" Opacity="0" TextWrapping="Wrap" Text="{Binding TemplateSettings.DragItemsCount, RelativeSource={RelativeSource Mode=TemplatedParent}}" TextTrimming="WordEllipsis"/>
									</Grid>
								</Border>
							</Grid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</common:LayoutAwarePage.Resources>

	<common:LayoutAwarePage.DataContext>
		<Binding Path="Main" Source="{StaticResource Locator}"/>
	</common:LayoutAwarePage.DataContext>
	<Grid Style="{StaticResource LayoutRootStyle}">
		<Grid.RowDefinitions>
			<RowDefinition Height="140"/>
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>

		<VisualStateManager.VisualStateGroups>

			<!-- Visual states reflect the application's view state -->
			<VisualStateGroup x:Name="ApplicationViewStates">
				<VisualState x:Name="FullScreenLandscape"/>
				<VisualState x:Name="Filled"/>

				<!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
				<VisualState x:Name="FullScreenPortrait">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
							<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>

				<!-- The back button and title have different styles when snapped -->
				<VisualState x:Name="Snapped">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
							<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
							<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>

		<!-- Top bar: Back button and page title -->
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Path=Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
			<TextBlock x:Name="pageTitle" Grid.Column="1" Text="Create Board" Style="{StaticResource PageHeaderTextStyle}"/>
			<TextBlock x:Name="fileNameTitle" Grid.Column="1" Text="File: Untitled.lbd" Margin="170,0,0,15" VerticalAlignment="Bottom" FontSize="14" Foreground="{StaticResource LbTextBrush}" FontFamily="Global User Interface" FontStyle="Italic" />

			<StackPanel Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal" VerticalAlignment="Center" Margin="0,0,50,0">
				<Button x:Name="ButtonSave" Command="{Binding SaveCmd}" 
					Background="{StaticResource LbLightShadowBrush}">
					<StackPanel Orientation="Horizontal" Margin="3">
						<Grid Width="40" Height="40" Background="{StaticResource LbBlueKeyBrush}">
							<Image Source="../Images/appbar.save.png" Margin="2" />
						</Grid>
					</StackPanel>
				</Button>
				<Button x:Name="ButtonPreview" Command="{Binding PreviewCmd}"
					Background="{StaticResource LbLightShadowBrush}">
					<StackPanel Orientation="Horizontal" Margin="3">
						<Grid Width="40" Height="40" Background="{StaticResource LbBlueKeyBrush}">
							<Image Source="../Images/appbar.monitor.play.png" Margin="2" />
						</Grid>
						<TextBlock VerticalAlignment="Center" FontSize="24" 
						   Margin="10,0,0,0" Foreground="{StaticResource LbBlueKeyBrush}">Preview</TextBlock>
					</StackPanel>
				</Button>
				<Button x:Name="ButtonPlay" Command="{Binding PlayCmd}" 
					Background="{StaticResource LbLightShadowBrush}">
					<StackPanel Orientation="Horizontal" Margin="3">
						<Grid Width="40" Height="40" Background="{StaticResource LbRedKeyBrush}">
							<Image Source="../Images/appbar.control.play.png" Margin="2" />
						</Grid>
						<TextBlock VerticalAlignment="Center" FontSize="24" 
						   Margin="10,0,0,0" Foreground="{StaticResource LbRedKeyBrush}">Play Board</TextBlock>
					</StackPanel>
				</Button>
			</StackPanel>
		</Grid>

		<Grid Grid.Row="1" Margin="40,40,0,20">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="2*"/>
				<ColumnDefinition Width="1*"/>
			</Grid.ColumnDefinitions>

			<!-- 좌측 Pages와 Details 컬럼 -->
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="1*" MinWidth="400" />
					<ColumnDefinition Width="20"/>
					<ColumnDefinition Width="1*" MinWidth="350"/>
				</Grid.ColumnDefinitions>
				<!-- 좌측 Pages 리스트 -->
				<Grid>
					<TextBlock HorizontalAlignment="Left" Grid.Row="1" TextWrapping="Wrap" Text="Pages" 
				   FontSize="30" Foreground="{StaticResource LbBlueKeyBrush}" VerticalAlignment="Top" FontFamily="Segoe UI Light" Margin="0,0,0,10" />
					<Grid Margin="0">
						<Grid.RowDefinitions>
							<RowDefinition />
							<RowDefinition Height="50" />
						</Grid.RowDefinitions>

						<StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" >
							<StackPanel.RenderTransform>
								<CompositeTransform ScaleX="0.8" ScaleY="0.8"/>
							</StackPanel.RenderTransform>
							<Button  Command="{Binding AddPageCmd}" Background="Transparent" Style="{StaticResource SquareButtonStyle}">
								<Viewbox>
									<Grid>
										<Grid Width="48" Height="48" Visibility="Visible">
											<Rectangle Fill="{StaticResource LbLightGrayBrush}" Visibility="Visible" />
										</Grid>
										<Path Data="M19.833,0L32.5,0 32.5,19.833999 52.334,19.833999 52.334,32.500999 32.5,32.500999 32.5,52.333 19.833,52.333 19.833,32.500999 0,32.500999 0,19.833999 19.833,19.833999z" 
							Stretch="Uniform" Fill="{StaticResource LbDarkBlueBrush}" Width="26" Height="26" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5"/>
									</Grid>
								</Viewbox>
							</Button>
							<Rectangle Width="10"></Rectangle>
							<Button Command="{Binding DeletePageCmd}" CommandParameter="{Binding SelectedItem, ElementName=ListViewPages}" Style="{StaticResource SquareButtonStyle}">
								<Viewbox>
									<Grid>
										<Grid Width="48" Height="48" Visibility="Visible">
											<Rectangle Fill="#FFD7DADB" Visibility="Visible" />
										</Grid>
										<Path Data="M0,0L53.333,0 53.333,8.888 0,8.888z" Stretch="Uniform" Fill="#FF2C3E50" Width="26" Height="26" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
											<Path.RenderTransform>
												<TransformGroup>
													<RotateTransform Angle="0" />
													<ScaleTransform ScaleX="1" ScaleY="1" />
												</TransformGroup>
											</Path.RenderTransform>
										</Path>
									</Grid>
								</Viewbox>
							</Button>
						</StackPanel>
						<!-- 아이템의 드래그앤드롭 기능을 위해 ItemsSource 는 CodeBehind에서 설정한다. -->
						<ListView x:Name="ListViewPages" HorizontalAlignment="Stretch" Background="{StaticResource LbLightShadowBrush}"
			VerticalAlignment="Stretch" BorderThickness="0" Margin="0,45,0,0"
			CanReorderItems="True" CanDragItems="True" AllowDrop="True" ItemContainerStyle="{StaticResource ListViewItemStyle1}">
							<ListView.ItemTemplate>
								<DataTemplate>
									<Border BorderBrush="White" BorderThickness="0,0,0,0" Height="60">
										<Grid Background="White">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="14*" />
												<ColumnDefinition Width="67*"/>
												<ColumnDefinition Width="50" />
											</Grid.ColumnDefinitions>
											<Grid>
												<TextBlock Text="{Binding Path=View}"></TextBlock>
											</Grid>
											<StackPanel Orientation="Vertical" Grid.Column="1">

												<TextBlock Foreground="{StaticResource LbBackgroundBrush}" Text="{Binding Path=Title}"/>
												<TextBlock Foreground="{StaticResource LbBackgroundBrush}" Text="{Binding Path=Data, Converter={StaticResource PropertyDataSummary}}"/>
											</StackPanel>
											<TextBlock Grid.Column="2" Foreground="{StaticResource LbDarkBlueBrush}" Text="{Binding Path=Duration}"/>
										</Grid>
									</Border>
								</DataTemplate>
							</ListView.ItemTemplate>
							<ItemsPanelTemplate>
								<VirtualizingStackPanel Orientation="Vertical" />
							</ItemsPanelTemplate>
						</ListView>
						<Grid Margin="0,2,0,0" Grid.Row="1" Background="{StaticResource LbLightShadowBrush}">
							<StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
								<ToggleSwitch x:Name="ToggleLoop" HorizontalAlignment="Left" VerticalAlignment="Center" 
									IsOn="{Binding ActiveBoard.Board.IsLoop, Mode=TwoWay}"
									OnContent="Loop" OffContent="No Loop" Foreground="{StaticResource LbBackgroundBrush}" />
								<Input:RadNumericBox x:Name="NumericBoxLoop" Visibility="{Binding IsOn, ConverterParameter=inverse, Converter={StaticResource BoolToVisibility}, ElementName=ToggleLoop}" 
									Width="30"
									Watermark="iteration" HorizontalAlignment="Left" VerticalAlignment="Center"/>
								<Rectangle Width="10"/>
								<TextBlock FontSize="15" VerticalAlignment="Center" Visibility="{Binding Visibility, ElementName=NumericBoxLoop}">
									<Run Text="times"/>
								</TextBlock>
							</StackPanel>
						</Grid>
					</Grid>
				</Grid>

				<!-- 좌측 Pages 리스트 끝 -->

				<!-- 우측 Properties 시작 -->
				<Grid Grid.Column="2" Margin="0,0,0,0">
					<Grid.RowDefinitions>
						<RowDefinition Height="230" />
						<RowDefinition Height="1*" />
					</Grid.RowDefinitions>
					<Grid Grid.Row="0">
						<TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Details" 
			FontSize="30" Foreground="{StaticResource LbBlueKeyBrush}" VerticalAlignment="Top" FontFamily="Segoe UI Light" />
						<Grid Margin="0,45,0,0" Background="{StaticResource LbLightShadowBrush}">
							<Grid Margin="10">
								<Grid.RowDefinitions>
									<RowDefinition Height="1*"/>
									<RowDefinition Height="1*"/>
									<RowDefinition Height="1*"/>
									<RowDefinition Height="1*"/>
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="100"/>
									<ColumnDefinition Width="1*"/>
								</Grid.ColumnDefinitions>
								<TextBlock Foreground="{StaticResource LbBackgroundBrush}" FontSize="16" HorizontalAlignment="Left" Margin="10,0,0,0" Text="Title" VerticalAlignment="Center"/>
								<TextBlock Foreground="{StaticResource LbBackgroundBrush}" FontSize="16" HorizontalAlignment="Left" Margin="10,0,0,0" Grid.Row="1" Text="Template" VerticalAlignment="Center"/>
								<TextBlock Foreground="{StaticResource LbBackgroundBrush}" FontSize="16" HorizontalAlignment="Left" Margin="10,0,0,0" Grid.Row="2" Text="Duration" VerticalAlignment="Center"/>
								<TextBlock Foreground="{StaticResource LbBackgroundBrush}" FontSize="16" HorizontalAlignment="Left" Margin="10,0,0,0" Grid.Row="3" Text="Description" VerticalAlignment="Center"/>
								<TextBox Grid.Column="1" HorizontalAlignment="Stretch" TextWrapping="Wrap" Text="" VerticalAlignment="Center"/>
								<StackPanel Grid.Column="1" HorizontalAlignment="Stretch" Grid.Row="2" VerticalAlignment="Top" Orientation="Horizontal">
									<Input:RadNumericBox/>
								</StackPanel>
								<TextBox Grid.Column="1" Grid.Row="3" TextWrapping="Wrap" VerticalAlignment="Center"/>
							</Grid>
						</Grid>
					</Grid>

					<Grid Grid.Row="1" Margin="0,10,0,0">
						<TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Properties" 
			FontSize="30" Foreground="{StaticResource LbBlueKeyBrush}" VerticalAlignment="Top" FontFamily="Segoe UI Light" Margin="0,10,0,0" />
						<Grid HorizontalAlignment="Stretch" Background="{StaticResource LbLightShadowBrush}" Margin="0,55,0,0">
							<ItemsControl x:Name="ListViewEditor"
			ItemsSource="{Binding Path=SelectedItem, Converter={StaticResource PageToDataListConverter}, ElementName=ListViewPages}" 
			ItemTemplateSelector="{StaticResource EditorTemplateSelector}" Margin="10">
								<!--<ItemsControl.ItemContainerStyle>
				<Style TargetType="ItemsControl">
					<Setter Property="HorizontalContentAlignment" Value="Stretch" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate>
								<ContentPresenter />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</ItemsControl.ItemContainerStyle>-->
							</ItemsControl>
						</Grid>
					</Grid>

				</Grid>
				<!-- 우측 Properties 끝 -->

			</Grid>

			<!-- 우측 Preview 부분 -->
			<Grid Grid.Column="1">
				<Grid Margin="20,0,0,0">
					<Grid>
						<TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Draft" 
			FontSize="30" Foreground="{StaticResource LbBlueKeyBrush}" VerticalAlignment="Top" FontFamily="Segoe UI Light" />
						
						<Frame x:Name="FramePreview" HorizontalAlignment="Center" VerticalAlignment="Center" MinWidth="300" MinHeight="200" Margin="10"/>
					</Grid>
				</Grid>
			</Grid>
		</Grid>



	</Grid>
</common:LayoutAwarePage>
